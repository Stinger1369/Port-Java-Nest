package com.Portbil.portfolio_backend.service;

import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import lombok.RequiredArgsConstructor;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class EmailService {

    private final JavaMailSender mailSender;
    private final String FROM_EMAIL = "renvarchits@lolaparfums.com"; // ‚úÖ Exp√©diteur autoris√© par Ionos, en majuscules pour constante

    /**
     * Envoie un email HTML avec logs d√©taill√©s
     *
     * @param to          Destinataire de l'email
     * @param subject     Sujet de l'email
     * @param htmlContent Contenu HTML de l'email
     * @throws RuntimeException si l'envoi √©choue
     */
    public void sendEmail(String to, String subject, String htmlContent) {
        try {
            System.out.println("üì® Tentative d'envoi d'email √† : " + to + " | Sujet : " + subject);
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setFrom(FROM_EMAIL); // ‚úÖ Exp√©diteur fixe pour Ionos
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlContent, true); // ‚úÖ Mode HTML activ√©

            System.out.println("üõ†Ô∏è Configuration de l'email termin√©e, envoi en cours...");
            mailSender.send(message);
            System.out.println("‚úÖ Email envoy√© avec succ√®s √† " + to + " | Sujet : " + subject);
        } catch (MessagingException e) {
            System.err.println("‚ùå √âchec de l'envoi de l'email √† : " + to + " | Raison : " + e.getMessage());
            e.printStackTrace();
            throw new RuntimeException("‚ùå √âchec de l'envoi de l'email √† " + to, e);
        }
    }
}